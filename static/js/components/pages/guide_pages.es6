import * as React from "react"
import {Link} from "react-router"
import {setTitle} from "st/globals"

class BaseGuidePage extends React.Component {
  render() {
    const link = (url, label) =>
      <Link activeClassName="active" to={url}>{label}</Link>

    return <div className="guide_page">
      <div className="page_navigation">
        <section>
          <div className="nav_header">Overview</div>
          <ul>
            <li>{link("/about", "About")}</li>
            <li>{link("/guide/generators", "Generators")}</li>
            <li>{link("/guide/chords", "Chords")}</li>
          </ul>
        </section>
      </div>
      {this.renderContents()}
    </div>
  }

  renderContents() {
    console.error("Fill me out")
  }
}

export class AboutPage extends BaseGuidePage {
  componentDidMount() {
    setTitle("About Sight Reading Trainer")
  }

  renderContents() {
    return <div className="page_container">
      <h2>About Sightreading.training</h2>

      <p>This site is a way for you to practice <a
      href="https://en.wikipedia.org/wiki/Sight-reading">sight reading</a> by
      playing randomly generated sheet music. It's not designed for learning
      existing songs. You'll need to have some basic knowldge of reading sheet
      music to begin with, but even without you should be able to figure things
      out by experimenting.</p>

      <h3>How this site works</h3>
      <p>This website randomly generates notes for you to sight read and play.
      This will ensure that you're always reading and never playing from
      memory. Since the music is randomly generated by a computer, it won't
      always sound good. A secondary goal of this project is to generate music
      that resembles a genre or style, but in the meantime we recommend you
      supplement practice with real music as well.</p>

      <p>When using the app you'll be preseneted with a sheet music view where
      notes will scroll in from the right as you play each one. In the simplest
      mode you'll play one note at a time, but you can increase complexity by
      by clicking into configure, and adding more notes. Additionally you can
      control key signature, and the staves that are shown.</p>

      <p>There are many different configuration options to control the random
      music generator. You can click the <b>Configure</b> button above the staff
      to chnage these setings. There's a glossary below with descriptions of
      each parameter.</p>

      <h3>Using a MIDI keyboard</h3>

      <p>Although it's possible to play using your mouse or computer keyboard,
      we recommend connecting your digital piano or MIDI keyboard to your
      computer so you can play directly into the software.</p>
      
      <p>In addition to making it easy to finger chords, it's crucial for
      developing your spacial awareness of where notes are on the keyboard.</p>

      <p>MIDI support is only available in Chrome at this time.</p>

      <h3>Shotcomings</h3>

      <p>This app is far from complete. Here are some planned improvements:</p>

      <ul>
        <li>Various rhythm modes, different time signatures</li>
        <li>Note generators that generate particular styles of music (Waltz, Four part harmony, Pop, etc.)</li>
        <li>A built in piano tone for those without audio set up</li>
      </ul>

      <p>If you'd like to contribute to this app, you can find the source code
      on GitHub: <a
      href="https://github.com/leafo/mursicjs">https://github.com/leafo/mursicjs</a></p>

      <h3>Tips for successful sight reading</h3>

      <blockquote><p>The creator of this website is not a professional musician
      and is a student of sight reading just like you. These tips are just
      observations from his own learnings. If you have any suggestions based on
      your experience please get in touch.</p></blockquote>

      <h4>Practice daily</h4>

      <p>Sight reading takes a long time to learn. Practice frequently to make
      reading notes second nature. You goal should be able to see notes and
      instantly know where to move your hands.</p>

      <p>You'll find that as you get quicker, it's easier to play a note than
      it is to think about what the name of it is. Competant sight readers are ab
      le </p>

      <p>
        <Link className="return_link" to="/">Return to sight reading trainer</Link>
      </p>
    </div>
  }
}

export class GuideGeneratorsPage extends BaseGuidePage {
  componentDidMount() {
    setTitle("Sight Reading Random Notes")
  }

  renderContents() {
    return <div className="page_container generators_guide_page">
      <h2>Note Generators</h2>
      <p>In order to provide unique sheet music to read, Sight Reading Trainer
      uses a random music generator. You can customize the generator to control
      the difficulty, and the types of things you want to practice.</p>

      <p>Access the generator settings by clicking the <strong>Configure</strong> button on the main screen.</p>

      <h3>Choosing a staff</h3>
      <p>The staff you choose configures the range of notes that are available
      to be read. The on-screen keyboard will display only the valid notes that
      can be played. Any notes generated will fall within the range of the staff chosen.</p>

      <p>You can choose from the following:</p>
      <ul>
        <li><img src="/static/svg/clefs.G.svg" height="25" width="25" alt="g cleff" /> Treble</li>
        <li><img src="/static/svg/clefs.F_change.svg" height="20" width="25" alt="f cleff" /> Bass</li>
        <li>Grand — A combination of treble and bass at the same time</li>
      </ul>

      <h3>Choosing a generator type</h3>
      <p>Sight Reading Trainer tries to generate something musical based on the
      parameters you've provided. The <strong>generator type</strong> is the
      function that picks which notes to show next. Each generator type can be
      customized using a series of parameters.</p>

      <p>The available generator types:</p>
      <ul>
        <li><strong>Random</strong> — Chooses 1 to 5 random notes within the chosen key to be played in each column</li>
        <li><strong>Triads</strong> — Chooses a <a href="https://en.wikipedia.org/wiki/Triad_(music)">triad</a> of notes in a random inversion in close voicing within the key signature</li>
        <li><strong>Sevens</strong> — Chooses a random <a href="https://en.wikipedia.org/wiki/Seventh_chord">seventh chord</a> with open voicing (this one sounds the most pleasant)</li>
        <li><strong>Progression</strong> — Chooses a random chord from a popular progression within the key signature</li>
        <li><strong>Position</strong> — Generates notes in a way that encourages you to use all of your fingers. See below for more information</li>
      </ul>

      <h3>The smoothness parameter</h3>
      <p>Every generator has a <strong>smoothness</strong> setting. The
      smoothness setting makes the randomness less apparent by minimizing the
      movements of notes for each column of the generated notes. (It is never
      possible to get the sames notes repeated though).</p>

      <p>If there are multiple notes, then it will minimize the average
      position of the notes in the column.</p>

      <p>The higher you set the smoothnesss, the more iterations the generator
      will perform to find a next set of notes, the smoother the movements will be.</p>

      <h3>The Random generator</h3>
      <p>The following parameters are available for the <strong>Random</strong> generator:</p>

      <ul>
        <li><strong>Notes</strong> — How many notes to generate at a time</li>
        <li><strong>Hands</strong> — How many hands should be used to play all
          the notes. For example, if you wanted to practice playing 5 chord notes in
          one hand, set notes to 5 and hands to 1</li>
        <li><strong>Chord based</strong> — The column of notes will be limited
          to notes that can be formed from stacked thirds</li>
      </ul>

      <h3>The Position Generator</h3>
      <p>The <strong>Position Generator</strong> is designed to have you
      utilize all of your fingers while sight reading. You'll be given notes in
      sets of 5, the first note will contain a fingering. All subsequent notes
      should be played without moving your hand, and with using each of your
      fingers.</p>

    </div>
  }
}


export class GuideChordsPage extends BaseGuidePage {
  componentDidMount() {
    setTitle("Sight Reading Random Chords")
  }

  renderContents() {
    return <div className="page_container chords_guide_page">
      <h2>Chord Mode</h2>
      <p>In addition to sight reading notes on sheet music, you can use the
      chord staff to sight read chords by name. Chords are generated in the
      desired key, and you'll need to press the minimum number of notes to
      continue to the next chord</p>
    </div>
  }
}

